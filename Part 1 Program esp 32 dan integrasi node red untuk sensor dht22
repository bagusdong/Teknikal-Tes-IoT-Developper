#include <WiFi.h>
#include <PubSubClient.h>
#include <DHT.h>

#define DHTPIN 4
#define DHTTYPE DHT22
DHT dht(DHTPIN, DHTTYPE);

// Konfigurasi jaringan Wi-Fi Wokwi
const char* ssid = "Wokwi-GUEST";
const char* password = "";  // Kosongkan password

// Detail Broker MQTT
const char* mqttServer = "broker.emqx.io";
const int mqttPort = 1883;
const char* mqttTopic = "wokwi/sensor";

WiFiClient espClient;
PubSubClient client(espClient);

void setup() {
  Serial.begin(115200);
  dht.begin();

  // Hubungkan ke WiFi Wokwi-GUEST
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("Terhubung ke WiFi!");

  // Hubungkan ke broker MQTT
  client.setServer(mqttServer, mqttPort);
  connectMQTT();
}

void connectMQTT() {
  while (!client.connected()) {
    String clientId = "ESP32Client_" + WiFi.macAddress(); // Membuat ID klien unik
    if (client.connect(clientId.c_str())) {  // Mengonversi ke const char*
      Serial.println("Terhubung ke broker MQTT!");
    } else {
      delay(1000);
      Serial.print("Gagal terhubung ke broker MQTT, mencoba kembali...");
    }
  }
}

void loop() {
  // Periksa koneksi WiFi
  if (WiFi.status() != WL_CONNECTED) {
    Serial.println("Koneksi WiFi terputus, mencoba menyambung kembali...");
    WiFi.begin(ssid, password);
    while (WiFi.status() != WL_CONNECTED) {
      delay(500);
      Serial.print(".");
    }
    Serial.println("Terhubung kembali ke WiFi!");
  }

  // Periksa koneksi MQTT
  if (!client.connected()) {
    connectMQTT();
  }
  client.loop();  // Menjaga koneksi aktif

  // Membaca data dari DHT22
  float temperature = dht.readTemperature();
  float humidity = dht.readHumidity();

  // Publikasi data jika valid
  if (!isnan(temperature) && !isnan(humidity)) {
    String payload = "{\"temperature\":" + String(temperature) + ", \"humidity\":" + String(humidity) + "}";
    client.publish(mqttTopic, payload.c_str());
    Serial.println(payload);  // Cetak payload untuk debugging
  } else {
    Serial.println("Pembacaan sensor gagal!");
  }

  delay(2000); // Delay lebih lama jika diperlukan
}
